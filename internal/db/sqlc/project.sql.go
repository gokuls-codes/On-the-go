// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: project.sql

package db

import (
	"context"
	"database/sql"
)

const createProject = `-- name: CreateProject :one
INSERT INTO projects (
  name, description, "githubURL"
) VALUES (
  ?, ?, ?
)
RETURNING id, name, description, githubURL, created_at, updated_at
`

type CreateProjectParams struct {
	Name        string
	Description sql.NullString
	GithubURL   interface{}
}

func (q *Queries) CreateProject(ctx context.Context, arg CreateProjectParams) (Project, error) {
	row := q.db.QueryRowContext(ctx, createProject, arg.Name, arg.Description, arg.GithubURL)
	var i Project
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Description,
		&i.GithubURL,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
