package templates

import "github.com/gokuls-codes/on-the-go/internal/web/templates/components/sidebar"
import "github.com/gokuls-codes/on-the-go/internal/web/templates/components/icon"
import "github.com/gokuls-codes/on-the-go/internal/web/templates/components/button"

templ DashboardLayout() {
	@Base() {
		<div class="min-h-screen ">
			@sidebar.Layout(sidebar.LayoutProps{
				Class: "w-full",
			}) {
				@sidebar.Sidebar(sidebar.Props{
					Collapsible: sidebar.CollapsibleNone,
					Variant:     sidebar.VariantSidebar,
					Class:       " border-none",
				}) {
					@sidebar.Header() {
						@sidebar.Menu() {
							@sidebar.MenuItem() {
								@sidebar.MenuButton(sidebar.MenuButtonProps{
									Href:  "#",
									Class: " !h-auto w-auto flex gap-2 mt-2",
								}) {
									<img src="/static/images/onthego.png" class=" aspect-video h-8  object-cover"/>
									<span class="font-semibold text-2xl">On the Go</span>
								}
							}
						}
					}
					@sidebar.Separator()
					@sidebar.Content(sidebar.ContentProps{
						Class: " border-r-border",
					}) {
						@sidebar.Group() {
							@sidebar.Menu() {
								@sidebar.MenuItem() {
									@sidebar.MenuButton(sidebar.MenuButtonProps{
										Href:    "/dashboard",
										Tooltip: "Dashboard",
									}) {
										@icon.LayoutDashboard(icon.Props{Class: "size-4"})
										<span>Dashboard</span>
									}
								}
								@sidebar.MenuItem() {
									@sidebar.MenuButton(sidebar.MenuButtonProps{
										Href:    "/dashboard/containers",
										Tooltip: "Containers",
									}) {
										@icon.Container(icon.Props{Class: "size-4"})
										<span>Containers</span>
									}
								}
								@sidebar.MenuItem() {
									@sidebar.MenuButton(sidebar.MenuButtonProps{
										Href:    "/dashboard/images",
										Tooltip: "Images",
									}) {
										@icon.Image(icon.Props{Class: "size-4"})
										<span>Images</span>
									}
								}
								@sidebar.MenuItem() {
									@sidebar.MenuButton(sidebar.MenuButtonProps{
										Href:    "/dashboard/logs",
										Tooltip: "Logs",
									}) {
										@icon.Logs(icon.Props{Class: "size-4"})
										<span>Logs</span>
									}
								}
							}
						}
					}
				}
				@sidebar.Inset() {
					<div class="flex h-full flex-1 flex-col ">
						<div class="flex h-fit items-center gap-4 md:hidden border-b border-border p-4 justify-between">
							@sidebar.Trigger()
							<img src="/static/images/onthego.png" class=" aspect-video h-8  object-cover"/>
							@button.Button(button.Props{
								Size:    button.SizeIcon,
								Variant: button.VariantGhost,
								Class:   "size-8",
								Href: "https://github.com/gokuls-codes/On-the-go",
								Target: "_blank",
							}) {
								@icon.Github(icon.Props{
									Class: " text-muted-foreground size-6",
								})
								<span class="sr-only">Open GitHub</span>
							}
						</div>
						<div class="flex-1">
							{ children... }
						</div>
					</div>
				}
			}
			// <div class=" w-1/5 h-screen py-4 border-r border-border">
			//     <h1 class=" text-4xl font-semibold text-white text-center px-4">On the Go</h1>
			//     <nav class=" border-t border-border mt-4">
			//         <ul class=" ">
			//             <li class="">
			//             @button.Button(button.Props{
			//                 Variant: button.VariantGhost,
			//                 Class: " w-full rounded-none p-4 items-start text-lg h-auto",
			//                 Href: "/dashboard",
			//             }) {
			//                 <p class="w-full">
			//                     Dashboard
			//                 </p>
			//             }
			//             </li>
			//             <li class="">
			//             @button.Button(button.Props{
			//                 Variant: button.VariantGhost,
			//                 Class: " w-full rounded-none p-4 items-start text-lg h-auto",
			//                 Href: "/dashboard/containers",
			//             }) {
			//                 <p class="w-full">
			//                     Containers
			//                 </p>
			//             }
			//             </li>
			//             <li class="">
			//             @button.Button(button.Props{
			//                 Variant: button.VariantGhost,
			//                 Class: " w-full rounded-none p-4 items-start text-lg h-auto",
			//                 Href: "/dashboard/images",
			//             }) {
			//                 <p class="w-full">
			//                     Images
			//                 </p>
			//             }
			//             </li>
			//             <li class="">
			//             @button.Button(button.Props{
			//                 Variant: button.VariantGhost,
			//                 Class: " w-full rounded-none p-4 items-start text-lg h-auto",
			//                 Href: "/dashboard/logs",
			//             }) {
			//                 <p class="w-full">
			//                     Logs
			//                 </p>
			//             }
			//             </li>
			//         </ul>
			//     </nav>
			// </div>
		</div>
	}
}
